{
  "name": "tenjin",
  "description": "A high performance template engine base on node.js.",
  "version": "0.1.1",
  "repository": {
    "type": "git",
    "url": "git://github.com/QLeelulu/nTenjin.git"
  },
  "author": {
    "name": "QLeelulu",
    "email": "qleelulu@gmail.com",
    "url": "http://qleelulu.cnblogs.com/"
  },
  "contributors": [
    {
      "name": "fengmk2",
      "email": "fengmk2@gmail.com"
    }
  ],
  "main": "index.js",
  "scripts": {
    "test": "expresso test"
  },
  "engines": {
    "node": "*"
  },
  "readme": "## What is this?\n\n基于[jsTenjin](http://www.kuwata-lab.com/tenjin/jstenjin-users-guide.html)修改的高性能的支持node.js的模板解析引擎\n(A template engine base on [jsTenjin's](http://www.kuwata-lab.com/tenjin/jstenjin-users-guide.html) and more fase and support node.js )\n\n## Change from jsTenjin\n\n+ jsTenjin是使用`eval`来解析的，而nTenjin是使用 `new Function` 来解析的(速度差别之一)。\n+ jsTenjin是使用`Array.push`来构造字符串的，而nTenjin是使用 `String += str` 来构造字符串的(速度差别之二)。\n+ nTenjin中变量必须由`it`来指定，例如`#{param}`要修改为`#{it.param}`,其他和jsTenjin完全一致。\n\n## Benchmarks\n\nat [here](http://jsperf.com/dom-vs-innerhtml-based-templating/142)\n\n## Install \n\n    $ sudo npm install tenjin\n\n## User's Guide\n\t\n\tvar tenjin = require('tenjin');\n\ttenjin.render('Hello #{it.name}!', {name:'nTenjin'});\n\nnote that the `it`\n\nmore detail at [jsTenjin User's Guide](http://www.kuwata-lab.com/tenjin/jstenjin-users-guide.html)\n\n## Use in express\n\n    app.register(\".html\", require('tenjin'));\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/QLeelulu/nTenjin/issues"
  },
  "homepage": "https://github.com/QLeelulu/nTenjin",
  "_id": "tenjin@0.1.1",
  "_shasum": "bcae636837d1a67d57e676355d35860eca1e8975",
  "_from": "tenjin@",
  "_resolved": "https://registry.npmjs.org/tenjin/-/tenjin-0.1.1.tgz"
}
